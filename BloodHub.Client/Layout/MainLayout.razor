@using BloodHub.Client.Services
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims

@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject IAuthService AuthService
@inject ThemeService ThemeService

<MudPopoverProvider />

<MudDialogProvider FullWidth="true"
MaxWidth="MaxWidth.ExtraSmall"
CloseButton="false"
BackdropClick="false"
Position="DialogPosition.Center"
CloseOnEscapeKey="true" />

<MudSnackbarProvider/>

<MudThemeProvider IsDarkMode="ThemeService.IsDarkMode" Theme="@ThemeService.CurrentTheme" />

<MudLayout Class="main-layout">
    <!-- Appbar -->
    <MudAppBar Elevation="2" Dense="true">
        <!-- Logo hoặc tiêu đề -->
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@DrawerToggle" />
        <MudText Typo="Typo.h6" Class="ml-2">Quản lý kho truyền máu</MudText>

        <!-- Spacer để đẩy các nút sang bên phải -->
        <MudSpacer />

        <!-- Hiển thị lời chào -->
        <MudText Typo="Typo.body1" >Chào @_userName</MudText>

        <!-- Toggle Dark Mode -->
        <MudToggleIconButton @bind-Toggled="ThemeService.IsDarkMode"
        OnToggledChanged="OnDarkModeToggle"
        Icon="@Icons.Material.Filled.WbSunny" Color="@Color.Default"
        ToggledIcon="@Icons.Material.Filled.Brightness2" ToggledColor="@Color.Warning"
        Class="m-1" />

        <MudMenu Icon="@Icons.Material.Filled.Settings" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopRight" AriaLabel="Open user menu">
            <ChildContent>
                <MudMenuItem OnClick="NavigateToProfile">Hồ sơ của tôi</MudMenuItem>

                <MudDivider Class="my-2" />

                <MudMenuItem OnClick="Logout">Đăng xuất</MudMenuItem>
            </ChildContent>
        </MudMenu> 
    </MudAppBar>

    <!-- Sidebar -->
    <MudDrawer @bind-Open="@_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <MudNavMenu>
            <MudNavLink Href="/" Icon="@Icons.Material.Filled.Home" Match="NavLinkMatch.All" IconColor="Color.Primary">Trang chủ</MudNavLink>

            <MudDivider Class="my-2" />

            <MudNavGroup Title="Danh mục" Icon="@Icons.Material.Filled.List" Expanded="false">
                <MudNavLink Href="/doctors" Icon="@Icons.Material.Filled.Man" IconColor="Color.Success" >Bác sĩ</MudNavLink>
                <MudNavLink Href="/nursings" Icon="@Icons.Material.Filled.Woman" IconColor="Color.Success">Điều dưỡng</MudNavLink>
                <MudNavLink Href="/wards" Icon="@Icons.Material.Filled.Room" IconColor="Color.Success">Khoa phòng</MudNavLink>
                <MudNavLink Href="/products" Icon="@Icons.Material.Filled.Bloodtype" IconColor="Color.Success">Sản phẩm</MudNavLink>
                <MudNavLink Href="/patients" Icon="@Icons.Material.Filled.People" IconColor="Color.Success">Bệnh nhân</MudNavLink>

            </MudNavGroup>

			<MudDivider Class="my-2" />

            <MudNavGroup Title="Quản lý ca trực" Icon="@Icons.Material.Filled.List" Expanded="true">
                <MudNavLink Href="/shifts" Icon="@Icons.Material.Filled.Man" IconColor="Color.Success">Ca trực</MudNavLink>
            </MudNavGroup>

            <MudDivider Class="my-2" />

            <MudNavLink Href="/users" Icon="@Icons.Material.Filled.ManageAccounts" IconColor="Color.Warning">Người dùng</MudNavLink>
        </MudNavMenu>
    </MudDrawer>

    <!-- Main Content -->
    <MudMainContent Class="main-content">
        @Body
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true; 
    private string _userName = "Nhân viên"; 

    void DrawerToggle() 
    { 
        _drawerOpen = !_drawerOpen; 
    }

    protected override async Task OnInitializedAsync() 
    { 
        ThemeService.OnChange += StateHasChanged;

        _userName = await AuthService.GetCurrentUserAsync();
        // if (_userName == "Khách")
        // {
        //     Navigation.NavigateTo("/login");
        // }
    }

    private void NavigateToProfile() 
    { 
        Navigation.NavigateTo("/profile"); 
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/login"); 
    }

    private void OnDarkModeToggle(bool value)
    {
        ThemeService.ToggleDarkMode(value);
    }
    public void Dispose() 
    {
        ThemeService.OnChange -= StateHasChanged; 
    }
}
