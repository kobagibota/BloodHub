@using BloodHub.Client.Services
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Navigation
@inject CustomAuthenticationStateProvider CustomAuthStateProvider

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    @if (context?.User.Identity == null || !context.User.Identity.IsAuthenticated)
                    {
                        Navigation.NavigateTo("/login", true);
                    }
                    else
                    {
                        <p role="alert">Bạn không có quyền truy cập vào trang này.</p>
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(LoginLayout)">
                <p role="alert">Không tìm thấy trang.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    private AuthenticationState? context;

    protected override async Task OnInitializedAsync()
    {
        context = await CustomAuthStateProvider.GetAuthenticationStateAsync();
    }
}


@* <Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router> *@
