@page "/wards"
@attribute [Authorize]

@using BloodHub.Client.Components
@using BloodHub.Client.Services
@using BloodHub.Shared.Entities
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization

@inject WardService WardService
@inject IDialogService DialogService
@inject NavigationManager Navigation

<PageTitle>Danh sách khoa phòng</PageTitle>

<RoleAuthorizeView Roles="Manager,Admin,User"> 
    <MudPaper Class="m-2" Elevation="3" >
        <!-- Table Section to Display Wards -->
        <MudTable Items="wards" FixedHeader="true" Dense="@dense" Striped="true" Hover="true" Bordered="true" Loading="isLoading"
                  Filter="new Func<Ward,bool>(FilterFunc)" @bind-SelectedItem="selectedItem" HorizontalScrollbar="true" >
            <ToolBarContent>
                <MudText Typo="Typo.h4" Class="mb-2">Danh sách khoa phòng</MudText>

                <MudSpacer />

                <!-- Trường tìm kiếm -->
                <MudTextField @bind-Value="searchString" Placeholder="Tìm kiếm"
                              Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search"
                              AdornmentColor="Color.Secondary" IconSize="Size.Medium"
                              Class="mt-0" Style="margin-right: 12px;" Disabled="@isLoading" />

                <!-- Nút Thêm mới -->
                <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add"
                           Color="Color.Info" OnClick="@(() => OpenWardDialog(null))"
                           Size="Size.Medium" Disabled="@isLoading">
                    Thêm mới
                </MudButton>            
            </ToolBarContent>

            <ColGroup>
                <col style="width: 80%; min-width:150px;" />
                <col style="width: 20%; min-width:30px;" />
            </ColGroup>

            <!-- Table Header -->
            <HeaderContent>
                <MudTh><MudTableSortLabel SortBy="new Func<Ward, object>(x => x.WardName)">Tên khoa phòng</MudTableSortLabel></MudTh>

                <MudTh Style="text-align:center">Hành động</MudTh>
            </HeaderContent>

            <!-- Table Rows -->
            <RowTemplate>
                <!-- Ward Name Column -->
                <MudTd DataLabel="Tên khoa phòng">@context.WardName</MudTd>

                <!-- Action Buttons Column -->
                <MudTd Style="text-align:center" DataLabel="Hành động">
                    <!-- Edit Button -->
                    <AuthorizeView> 
                        <Authorized Context="authContext">
                            <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Primary" Size="Size.Small" OnClick="@(() => OpenWardDialog(context))" 
                                            Disabled="@(authContext.User.IsInRole("User"))">Sửa</MudIconButton>
                        </Authorized>
                    </AuthorizeView>

                    <!-- Delete Button -->
                    <AuthorizeView Roles="Admin,Manager"> 
                        <Authorized Context="authContext">
                            <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" Size="Size.Small" OnClick="@(() => ConfirmDeleteWard(context.Id, context.WardName))">Xóa</MudIconButton>
                        </Authorized>
                    </AuthorizeView>
                </MudTd>
            </RowTemplate>

            <!-- No Record -->
            <NoRecordsContent>
                <MudPaper Elevation="2" Class="pa-4 text-center">
                    <MudIcon Icon="@Icons.Material.Filled.Info" Color="Color.Info" Size="Size.Large" />
                    <MudText Typo="Typo.h6" Class="mt-2">Không có dữ liệu</MudText>
                    <MudText Typo="Typo.body2" Color="Color.Secondary">Hãy kiểm tra lại bộ lọc hoặc thêm dữ liệu mới.</MudText>
                </MudPaper>
            </NoRecordsContent>

            <!-- Loading -->
            <LoadingContent>
                <MudContainer Class="text-center">
                    <MudText Typo="Typo.h6" Class="mt-2">Đang tải dữ liệu...</MudText>
                </MudContainer>
            </LoadingContent>

            <!-- Pagination -->
            <PagerContent>
                <MudTablePager PageSizeOptions="new int[] { 10, 25, 50, 100, int.MaxValue }" RowsPerPageString="Mỗi trang" AllItemsText="Tất cả" />
            </PagerContent>
        </MudTable>
    </MudPaper>
</RoleAuthorizeView>

@code {
    // List of wards to display in the table
    private List<Ward> wards = new List<Ward>();
    private Ward selectedItem = new Ward(); // Currently selected ward
    private HashSet<Ward> selectedItems = new HashSet<Ward>(); // Set of selected items (if multi-selection is enabled)
    private string searchString = ""; // Search string for filtering
    private bool isLoading = true;
    private bool dense = true;

    // Fetch the list of wards when the component initializes
    protected override async Task OnInitializedAsync()
    {
        await LoadWards();        
    }

    // Filtering logic for the search functionality
    private bool FilterFunc(Ward element) => FilterFunc(element, searchString);

    private bool FilterFunc(Ward element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true; // No filter applied
        if (element.WardName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true; // Match found
        return false; // No match
    }

    // Open the dialog to add or edit a ward's information
    private async Task OpenWardDialog(Ward ward)
    {
        var parameters = new DialogParameters();
        parameters.Add("Ward", ward ?? new Ward()); // Tạo đối tượng mới nếu ward là null

        string title = (ward == null) ? "Thêm mới khoa phòng" : "Chỉnh thông tin khoa phòng";
        var dialog = DialogService.Show<WardDialog>(title, parameters);
        var result = await dialog.Result;

        if (result != null && !result.Canceled)
        {
            await LoadWards(); // Làm mới danh sách
        }
    }

    // Confirm and delete a ward
    private async Task ConfirmDeleteWard(int wardId, string wardName)
    {
        var parameters = new DialogParameters
        {
            { "ContentText", $"Bạn có chắc chắn muốn xóa ''{wardName}'' ra khỏi danh sách không?" }, // Confirmation message
        };

        var dialog = DialogService.Show<ConfirmDialog>("Xác nhận", parameters);
        var result = await dialog.Result;

        if (result?.Canceled == false)
        {
            // Delete the ward and refresh the list
            var response = await WardService.DeleteWard(wardId);
            if (response.Success)
            {
                await LoadWards(); // Làm mới danh sách
            }
            else
            {
                await DialogService.ShowMessageBox("Lỗi truy cập", response.Message);
            }
        }
    }

    // Phương thức tải lại danh sách khoa phòng (tái sử dụng nhiều nơi)
    private async Task LoadWards()
    {
        try
        {
            isLoading = true;
            var response = await WardService.GetAllWards();
            if (response.Success && response.Data != null)
            {
                wards = response.Data;
            }
            else
            {
                // Hiển thị thông báo lỗi từ API
                await DialogService.ShowMessageBox("Lỗi", response.Message);
            }
        }
        catch (Exception ex)
        { 
            await DialogService.ShowMessageBox("Lỗi", $"Xảy ra lỗi khi tải danh sách khoa phòng: {ex.Message}");
        }
        finally 
        {
            isLoading = false;
        }
    }
}
